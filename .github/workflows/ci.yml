name: CI
on:
  push:
    branches: ['**']
    tags-ignore: ['**']
    paths-ignore: ['docs/**']
  pull_request:
    paths-ignore: ['docs/**']
  schedule:
  - cron: '0 2 * * *'
jobs:
  activate:
    if: "!endsWith(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
    - name: Proceed
      run: echo ok go
  build:
    needs: activate
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        ruby: ['jruby-head']
        asciimath-version: [~]
        pygments-version: ['~> 2.0']
        rouge-version: [~]
        include:
        - os: ubuntu-latest
          ruby: jruby-head
          pygments-version: '~> 1.2.0'
    runs-on: ${{ matrix.os }}
    env:
      COVERAGE: ${{ matrix.primary }}
      BUNDLE_WITHOUT: docs
      SOURCE_DATE_EPOCH: '1521504000'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install prerequisites for Nokogiri (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libxslt1-dev
    - name: Configure Nokogiri installation (Linux, macOS)
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      run: echo 'BUNDLE_BUILD__NOKOGIRI=--use-system-libraries' >> $GITHUB_ENV
    - name: Set AsciiMath version
      if: matrix.asciimath-version
      run: echo 'ASCIIMATH_VERSION=${{ matrix.asciimath-version }}' >> $GITHUB_ENV
    - name: Set Pygments version
      if: matrix.pygments-version
      run: echo 'PYGMENTS_VERSION=${{ matrix.pygments-version }}' >> $GITHUB_ENV
    - name: Set Rouge version
      if: matrix.rouge-version
      run: echo 'ROUGE_VERSION=${{ matrix.rouge-version }}' >> $GITHUB_ENV
    - name: Install Ruby (uses cached dependencies for non-scheduled build)
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: ${{ github.event_name != 'schedule' }}
    - name: Install dependencies (scheduled build only)
      if: github.event_name == 'schedule'
      run: |
        bundle config --local path .bundle/gems
        bundle --jobs 3 --retry 3
    - name: Run tests
      run: bundle exec ruby -w $(bundle exec ruby -e 'print File.join Gem.bindir, %q(rake)') test:all
    - name: Build dependents
      if: matrix.primary && github.event_name == 'push' && github.repository == 'asciidoctor/asciidoctor'
      env:
        GITHUB_API_TOKEN: ${{ secrets._GITHUB_API_TOKEN }}
        TRAVIS_API_TOKEN: ${{ secrets.TRAVIS_API_TOKEN }}
      run: bundle exec rake build:dependents
